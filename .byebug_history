c
params
c
current_user.check_ins
current_user
c
current_user.friends[0].check_ins
current_user.friends
c
n
params[:type]
c
x
n
params[:type]
c
current_user.id
requester_id
@request
c
user.friends
user
user.friends
user.friends.where("friend_id = ?", current_user.id)
!user.friends.where("friend_id = ?", current_user.id).empty?
!user.friends.where("friend_id = ?", current_user.id)
current_user
user
c
params[:user_id]
params
c
user.friends.where("friend_id = ?", current_user.id).falsy
user.friends.where("friend_id = ?", current_user.id).false?
user.friends.where("friend_id = ?", current_user.id).false
user.friends.where("friend_id = ?", current_user.id).falsy?
user.friends.where("friend_id = ?", current_user.id).empty?
user.friends.where("friend_id = ?", current_user.id).nil?
user.friends.where("friend_id = ?", current_user.id).is_true?
user.friends.where("friend_id = ?", current_user.id)
n
s
user.friends.where("friend_id = ?", current_user.id) == true
user.friends.where("friend_id = ?", current_user.id)
user.friends
user.friend
c
current_user.requests
user.requests.where("requester_id= ?", current_user.id)
user.approvals.where("requester_id= ?", current_user.id)
user.approvals.find("requester_id= ?", current_user.id)
user.approvals.find("requester_id= ?", ?)
user.approvals
user
cuser
current_user.requests.find("_id=?", current_user.id)
current_user.approvals.find("requester_id=?", current_user.id)
current_user.approvals.find("id=?",current_user.id)
current_user.approvals.include?(current_user)
current_user.approvals.include?(current_user.id)
current_user.approvals.include?(current_user)
current_user
user.approvals
user.requests
user.friends
user
c
params[:request]
params[:user]
params[:user
data
request
params
exit
current_user.check_in_comments.class
current_user.check_in_comments
current_user.comments.class
current_user.comments
available_comments.find(1)
available_comments.class
available_comments
@comment
c
@check_in
c
@beer
c
params
